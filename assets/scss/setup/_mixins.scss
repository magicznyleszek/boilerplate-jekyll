// --------------------------------------------------
// positioning shorthand
// @include absolute(top 10px right 30px);
// --------------------------------------------------

@mixin position($position, $args) {
    // look for these offsets
    $offsets: top right bottom left;
    @each $offset in $offsets {
        // check if offset found in $args
        $i: index($args, $offset);
        // check if offset was found
        // check if offset is withing list range
        // check if offset value is valid
        @if $i
        and $i + 1 <= length($args)
        and type-of( nth($args, $i + 1) ) == number {
            // assign value to offset
            #{$offset}: nth($args, $i + 1);
        }
    }
    position: $position;
}

@mixin absolute($args) {
    @include position(absolute, $args);
}

@mixin fixed($args) {
    @include position(fixed, $args);
}


// --------------------------------------------------
// function to strip units from value
// --------------------------------------------------

@function parseInt($n) {
    @return $n / ($n * 0 + 1);
}


// --------------------------------------------------
// function for converting to rem value
// uses $fontSize
// --------------------------------------------------

@function rem($value) {
    $root: parseInt($fontSize);
    $val: parseInt($value);
    $return: ();
    @if unit($value) == "px" {
        $return: append($return, ($val / $root + rem));
    } @else {
        $return: append($return, ($val * $root + px));
    }
    @return $return;
}